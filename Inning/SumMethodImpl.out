
@SubTask(name = "sumRuns ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumRuns (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getRuns ();}return total.intValue();}


@SubTask(name = "sumMins ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumMins (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getMins ();}return total.intValue();}


@SubTask(name = "sumBallFaced ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumBallFaced (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getBallFaced ();}return total.intValue();}


@SubTask(name = "sumFours ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumFours (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getFours ();}return total.intValue();}


@SubTask(name = "sumSixes ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumSixes (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getSixes ();}return total.intValue();}


@SubTask(name = "sumStrikeRate ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumStrikeRate (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getStrikeRate ();}return total.intValue();}


@SubTask(name = "sumPositions ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumPositions (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getPositions ();}return total.intValue();}


@SubTask(name = "sumInnings ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumInnings (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getInnings ();}return total.intValue();}


@SubTask(name = "sumOdi ", sequence = 1, ignoreException = false, hawkParam = "var innings")public     int sumOdi (Object ... args ){Set<Inning> input = null;if ( args[0] != null){input  = (Set<Inning> ) args[0];}Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Double total = 0.0;for(Inning inning : tmpSet){total = total+inning.getOdi ();}return total.intValue();}

