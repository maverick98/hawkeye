
@SubTask(name = "likePlayer ", sequence = 1, ignoreException = false, hawkParam = "var innings,var player ")public     Set<Inning> likePlayer (Object ... args ){Set<Inning> input = null;org.cricket.hawkeye.db.Player  player = null;if(args == null || args.length == 0){return null;}if(args.length == 2){if ( args[0] != null){input  = (Set<Inning> ) args[0];}if ( args[1] != null){player = ( org.cricket.hawkeye.db.Player ) args[1];}}else if(args.length == 1){player = ( org.cricket.hawkeye.db.Player ) args[0];}Inning otherInning = new Inning();otherInning.setPlayer ( player );Set<Inning> result = new TreeSet<Inning>();for(Inning inning : this.getInnings().getAll()){if(inning.getPlayer ().like(otherInning.getPlayer ())){result.add(inning);}}if(input != null && !input.isEmpty() ){if(input.retainAll(result)){result = input;}else{result = new TreeSet<Inning>();}}return result;}


@SubTask(name = "likeOpposition ", sequence = 1, ignoreException = false, hawkParam = "var innings,var opposition ")public     Set<Inning> likeOpposition (Object ... args ){Set<Inning> input = null;org.cricket.hawkeye.db.Country  opposition = null;if(args == null || args.length == 0){return null;}if(args.length == 2){if ( args[0] != null){input  = (Set<Inning> ) args[0];}if ( args[1] != null){opposition = ( org.cricket.hawkeye.db.Country ) args[1];}}else if(args.length == 1){opposition = ( org.cricket.hawkeye.db.Country ) args[0];}Inning otherInning = new Inning();otherInning.setOpposition ( opposition );Set<Inning> result = new TreeSet<Inning>();for(Inning inning : this.getInnings().getAll()){if(inning.getOpposition ().like(otherInning.getOpposition ())){result.add(inning);}}if(input != null && !input.isEmpty() ){if(input.retainAll(result)){result = input;}else{result = new TreeSet<Inning>();}}return result;}


@SubTask(name = "likeGround ", sequence = 1, ignoreException = false, hawkParam = "var innings,var ground ")public     Set<Inning> likeGround (Object ... args ){Set<Inning> input = null;org.cricket.hawkeye.db.Ground  ground = null;if(args == null || args.length == 0){return null;}if(args.length == 2){if ( args[0] != null){input  = (Set<Inning> ) args[0];}if ( args[1] != null){ground = ( org.cricket.hawkeye.db.Ground ) args[1];}}else if(args.length == 1){ground = ( org.cricket.hawkeye.db.Ground ) args[0];}Inning otherInning = new Inning();otherInning.setGround ( ground );Set<Inning> result = new TreeSet<Inning>();for(Inning inning : this.getInnings().getAll()){if(inning.getGround ().like(otherInning.getGround ())){result.add(inning);}}if(input != null && !input.isEmpty() ){if(input.retainAll(result)){result = input;}else{result = new TreeSet<Inning>();}}return result;}

