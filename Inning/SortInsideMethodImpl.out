
@SubTask(name = "sortPlayerName ", sequence = 1, ignoreException = false, hawkParam = "var innings,var #TYPEINSIDEFIELDINSTANCE# ")public     Inning [] sortPlayerName (Object ... args ){if(args == null || args.length == 0){return null;}Set<Inning> input = null;input  = (Set<Inning> ) args[0];Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Inning []  tmpArray = tmpSet.toArray(new Inning[] {});Arrays.sort(tmpArray,new Comparator(){@Override
public int compare(Object o1, Object o2) {Inning thisInning = (Inning) o1;Inning thatInning = (Inning) o2;return thisInning.getPlayerName ().compareTo(thatInning.getPlayerName ());}});return tmpArray;}


@SubTask(name = "sortOppositionName ", sequence = 1, ignoreException = false, hawkParam = "var innings,var #TYPEINSIDEFIELDINSTANCE# ")public     Inning [] sortOppositionName (Object ... args ){if(args == null || args.length == 0){return null;}Set<Inning> input = null;input  = (Set<Inning> ) args[0];Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Inning []  tmpArray = tmpSet.toArray(new Inning[] {});Arrays.sort(tmpArray,new Comparator(){@Override
public int compare(Object o1, Object o2) {Inning thisInning = (Inning) o1;Inning thatInning = (Inning) o2;return thisInning.getOppositionName ().compareTo(thatInning.getOppositionName ());}});return tmpArray;}


@SubTask(name = "sortGroundName ", sequence = 1, ignoreException = false, hawkParam = "var innings,var #TYPEINSIDEFIELDINSTANCE# ")public     Inning [] sortGroundName (Object ... args ){if(args == null || args.length == 0){return null;}Set<Inning> input = null;input  = (Set<Inning> ) args[0];Set<Inning> tmpSet = null;if(input != null && !input.isEmpty() ){tmpSet = input;}else{tmpSet = this.getInnings().getAll();}Inning []  tmpArray = tmpSet.toArray(new Inning[] {});Arrays.sort(tmpArray,new Comparator(){@Override
public int compare(Object o1, Object o2) {Inning thisInning = (Inning) o1;Inning thatInning = (Inning) o2;return thisInning.getGroundName ().compareTo(thatInning.getGroundName ());}});return tmpArray;}

