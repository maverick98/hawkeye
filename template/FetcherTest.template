function main()
{
exec  createCopyrightInfo()

>package org.cricket.hawkeye.db;
>import java.util.Set;
>import java.util.TreeSet;
>import org.hawk.module.AbstractModule;
>import org.hawk.module.annotation.SubTask;
>import java.util.Arrays;
>import java.util.Comparator;
>import java.math.BigDecimal;
>import java.math.RoundingMode;
>import org.hawk.module.plugin.HawkPluginModule;
>import org.common.di.ScanMe;
>
>/**
> *
> * @author msahu
> */
>@ScanMe(true)
>public class #CLAZZ#Fetcher extends HawkPluginModule
>{
>	
>        @Override
echo ""
>        public String getPluginName() {
>         return "hawk-eye";
>        }
>
>	public #CLAZZ#s get#CLAZZ#s() {
>        	return #CLAZZ#s .getInstance();
>    	}
>	@Override
echo ""
>	public String toString() {
>		return this.getName();
>	}
>
>        public String getName() {
>        	return "#CLAZZ#Fetcher";
>        }
>
>        @Override
echo ""
>        public boolean startUp() {
>        	throw new UnsupportedOperationException("Not supported yet.");
>        }
>
>        @Override
>        public boolean reset() {
>        	throw new UnsupportedOperationException("Not supported yet.");
>        }
>
	for(var i = 1 ; i<= #SIZE#;i = i+1)
	{
>
if (	#SHOULD_INCLUDE_EQUAL_START#  == 1)
 { 
>	@SubTask(name = "equal#FIELD# ", sequence = 1, ignoreException = false, hawkParam = "var innings,var #FIELDINSTANCE# ")
>	public     Set<#CLAZZ#> equal#FIELD# (Object ... args ){
>
>
>		Set<#CLAZZ#> input = null;
>		
>		#TYPE#  #FIELDINSTANCE# = null;
>
>
>
>		if(args == null || args.length == 0){
>			return null;		
>		}
>
>		if(args.length == 2){
>			if ( args[0] != null){
>
>		        	input  = (Set<#CLAZZ#> ) args[0];  
>		
>			}
>			if ( args[1] != null){
>
>				#FIELDINSTANCE# = ( #TYPE# ) args[1];
>		
>			}
>		}else if(args.length == 1){
>
>			#FIELDINSTANCE# = ( #TYPE# ) args[0];
>
>		}
>
>
>		Set<#CLAZZ#> result = new TreeSet<#CLAZZ#>();
>
>		for(#CLAZZ# #CLAZZINSTANCE# : this.get#CLAZZ#s().getAll())
>		{
>			
>			if(#CLAZZINSTANCE#.#GETFIELD# ().equals(#FIELDINSTANCE# ))
>			{
>
>				result.add(#CLAZZINSTANCE#);	
>			}
>		}
>
>		if(input != null && !input.isEmpty() ){
>			if(input.retainAll(result)){
>				result = input;
>			}else{
>				result = new TreeSet<#CLAZZ#>();
>			}
>			
>		}
>		return result;
>	}
 } 
>
>

	}
}

function createCopyrightInfo()
{	 
>
>
>	/**This file was generated at #DATE# 
>	  *Don't you dare edit this file.You will regret it if you do!!! 
>	  * This file is part of hawkeye 
>	  * CopyLeft (C) 2012-2013 Manoranjan Sahu, All Rights are left.
>	  *
>	  */
}


