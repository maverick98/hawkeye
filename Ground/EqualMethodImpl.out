
@SubTask(name = "equalName ", sequence = 1, ignoreException = false, hawkParam = "var innings,var name ")public     Set<Ground> equalName (Object ... args ){Set<Ground> input = null;java.lang.String  name = null;if(args == null || args.length == 0){return null;}if(args.length == 2){if ( args[0] != null){input  = (Set<Ground> ) args[0];}if ( args[1] != null){name = ( java.lang.String ) args[1];}}else if(args.length == 1){name = ( java.lang.String ) args[0];}Set<Ground> result = new TreeSet<Ground>();for(Ground ground : this.getGrounds().getAll()){if(ground.getName ().equals(name )){result.add(ground);}}if(input != null && !input.isEmpty() ){if(input.retainAll(result)){result = input;}else{result = new TreeSet<Ground>();}}return result;}


@SubTask(name = "equalCountry ", sequence = 1, ignoreException = false, hawkParam = "var innings,var country ")public     Set<Ground> equalCountry (Object ... args ){Set<Ground> input = null;org.cricket.hawkeye.db.Country  country = null;if(args == null || args.length == 0){return null;}if(args.length == 2){if ( args[0] != null){input  = (Set<Ground> ) args[0];}if ( args[1] != null){country = ( org.cricket.hawkeye.db.Country ) args[1];}}else if(args.length == 1){country = ( org.cricket.hawkeye.db.Country ) args[0];}Set<Ground> result = new TreeSet<Ground>();for(Ground ground : this.getGrounds().getAll()){if(ground.getCountry ().equals(country )){result.add(ground);}}if(input != null && !input.isEmpty() ){if(input.retainAll(result)){result = input;}else{result = new TreeSet<Ground>();}}return result;}

